Программисты, в основном, делают три вещи:
  Создают софт, который сами и придумали, для конечных пользователей — Собственная разработка;
  Заказная разработка — извне пришёл мужик, сказал, что и как нужно написать, а потом взял на себя продвижение. Описание задачи --> реалаизация; Основная категория;
  Продуктом является не программа, а ответ. Выдаются данные, надо что-то из них извлечь и выдать;


        Распределние ролей в IT-комапнии
Стандартное количество людей в небольшой компании — 50-250. Предположим, знаимается она заказными проектами;

При поступлении на рассмотрение проекта первым решнием будет вопрос о том, брать ли его. Этим занимается руководство;
Хороший руководитель будет знать, к кому пойти, чтобы спросить, брать ли проект. В основном, это делается, опираясь на опыт. Несмотря на это, ответственность за проект лежит на руководстве;

Предположим, мы приняли заказ. В этом случае мы получаем ТЗ. Точнее говоря, не получаем. Готового ТЗ не даётся никогда потому что заказчик — не программист. В итоге изначальное ТЗ обсуждается, после этого подписывается контракт на первый этап работы;

Тут дело переходит к аналитику — человеку, который сделает ТЗ внятным и поставит чёткую задачу. По сути, он переводит с бизнесменксого на программистсикй. Он должен предствалять, как пишется код, и, при этом, быть коммуникабельным, уметь хорошо писать и
составлять документы. Мышление должно быть аналитическим;
/*Потенциально, может быть отдельным бизнесом*/

После постановки ТЗ и заверения его обеими сторонами, начинается основная работа;
В дело вступает продуктовый отдел — команда, занимающаяся одним конкретным проектом. Главный там — Project Manager — руководитель проекта;
На входе он получает, собственно, ТЗ. Первым делом, он выбирает себе команды, которая будет заниматься этим проектом;
После этого он руководит производством проекта, следя за прогрессом. Он не даёт никому заваливаться и перетягивать проект на себя. Надо, чтобы всё работа над проектом шла равномерно. Если, вдруг, что-то не так, руководитель это решаает,
будучи чуть ли не псхологом. Он не пишет код. В идеале он должен уметь прогарммировать, чтобы лучше понимать, что происходит, а ещё — чтобы его уважали. В идеале, он должен помогать решать проблемы и не мешать. Он же раешат конфликты в команде;

Account manager — человек, который не заказчику мешать команде работать, к примеру, добавляя какие-то микрозадачи. Команда готовит презентацию того, что сделали, готовят какую-то демонстрацию, а потом уже сам менеджер взаимодействует с заказчиком;
Программирование ему не особо нужно, он, скорее, психолог-маркетолог;

Теперь о, собственно, разработке. Первым делом идут стратегические решения по типу выбора платформы, того, что используется и так далее. Это работа системного архитектора — одна из самых творческих и оплачиваемых в индустрии;
Он должен быть очень хорошим программистом, пусть и почти не пишет код. Он выдаёт конкретизированное ТЗ, так что навыки написания документации тоже должны присутствовать. Коммуникативные навыки тоже крайне полезны;

Все эти люди, кроме АккаунтМенеджера, вырастают из программистов почти всегда. Из этого вылезает проблема — люди, которые могут быть хорошими аналитиками, не всегда могут до них дойти, будучи программистом. Если руководитель проекта замечает в ком-то потенциал,
он может попробовать его развивать, начиная делегировать свои полномочия. После этого иногда происходит повышение;

Теперь, наконец, команда разработки;

Есть самый обычный разработчик, который сидит и пишет код;

Джуниор-разработчик — это человек почти без опыта работы, который недавно оказался в этой сфере. Какое-то время он вообще может работать без зарплаты на стажировку. Он выполняет простые задачи, которые было бы жалко отдавать более опытным людям;

Надо всеми стоит Тимлид. Он является связующим звеном между систменым архитектором и командой. Он даёт задачи и разъясняет их другим. Несмотря на это, он сам пишет код. Соотношение кода к организации — примерно 60\40;
Этот человек должен быть очень сильным программистом, который должен быть ещё и учителем-психологом. Он оценивает перспективы развития своей команды;

Люди, которые оказываются сильными программистами, но не хотят идти в руководство, оказываются на должности Сеньор-разработчика. В компаниях часто бывают ранги сеньоров;

Существует ещё и тестировщик, котррого иногда обзывают словом QA. Кода он не видит, стараясь сломать программу с точки зрения пользователя. Если он будет программистом, будет лучше, но это не обязательно. Он должен аккуратно прокрутить всё, и, если найдёт баги, подробно описать
ситуацию так, чтобы программисты поняли, как чинить;




Примерно по такой же логике работает дизайн;
Во-первых, есть арт-директор. Он занимается тем, что придумывает основной стиль, в котором всё будет выполнено;
Остальные люди — дизайнеры, иллюстраторы и так далее — делают по образу и подобию. Чуть менее творческая и более техническая работа;

Среди них можно выделить UX-дизайнера и UX-аналитика. Они занимаются продумыванием интерфейса с точки срения пользователя, выбирают расположение объектов и так далее;






На этом продуктовый отдел заканчивается, но в компаниях существуют и другие люди;
Системный администратор — это человек, который разбирается с сетевой архитектурой и софтом, которые распространяются на всю компанию;
Где-то между ним и программистами расположен DEVOPS, который организует всё с точки зрения технологий, выбирает ПО, следить за повяленим новых инструментов и внедрения оных, и так далее;

HR — Human Recource — человек, который ищет и нанимает людей. Он далёк от программирования. Он проводит собеседование первого уровня, которое практически полностью завязано на психологии. Они часто задают странные вопросы, проверяя реакцию людей;
Он же занимается удержанием людей в компании, ведь всегда выгоднее удержать старого, чем брать нового;

Ещё где-то существуют бухгалтеры и юристы;

Важной и достаточно сложной частью являются маркетинг и пиар. Они занимаются продвиженим своих продуктов и увеличение пользовательской базы или привлечением заказчиков;
