1. Основная идея в отстутствии планирования на большие сроки вперёд. Обозначается ближайший этап, после чего он сразу отправляется в реализацию;
2. Динамическое управление требованиями. То, что мы делаем во второй итерации, зависит от результата первой;
3. Отсутствие лишней работы;
4. Выбор более простых решений;
По сути, задача сводится к "Оно должно работать завтра";

Очевидно, просто так эта модель разработки работать не будет;

При составлении ТЗ в традиционных модеялх мы задаём человеку, который представляет себе результат, 1984 вопроса и пишем документ на 20 страниц.
В гибкой же модели эти вопросы задаются по мере возникновения. При этом в процесс обсуждения включаются почти все -- от заказчиков до тестировщиков и дизайнеров;
Из этого следует то, что эта модель будет работать только для небольшого количества задействованных людей;
Итерации тоже должны быть небольлшими -- от двух до четырёх недель;


Манифест agile-разработчика (2001)
Состоит из 12 пунктов вида "X > Y". Будут разобраны 4 основных;

1. Люди и взаимодействия важнее процессов и инструментов;
2. Работающий продукт важнее исчерпывающей документации;
3. Сотрудничество с заказчиком важнее согласования условий контракта;      //из-за малого количества сотрудников взаимодейтсвие с заказчиком возможно для каждого из них
4. Готовность к изменениям важнее следования первоначальному плану;     //изначальный план -- декларация намерений, которая точно будет меняться в дальнейшем

Как и у любой другой системы, эта имеет недостатки;
1. Отсутствие ТЗ может демотивировать заказчика;
  Это может привести к частым и зачастую неоправданным сменам требований;
2. Скорость и плохая продуманность\документированность приводят к бардаку в проекте. Из-за этого сложно включатаь в действо новых людей;
3. Выбор в пользу простых решений приводит к тому, что многое потом нужно переписывать. К тому же, понижается надёжность;



Область применения:
1. Небольшие заказные проекты;
2. Стартапы;
3. Научные разработки;
4. Data Science
Короче, используется там, где планирование следующего шага зависит от результата предыдущего;
