Изначально scrum -- термин из регби. У каждого игрока на поле обычно есть своя задача. Scrum же -- по сути, противположность -- "Управляемая куча-мала."
Каждый человек не имеет отдельной задачи, но есть надобность объединиться в группу и действовать группой;


Scrum во многом опирается на Agile. У нас почти нет документации и глубокого планирования. Используется для маленьких команд;
Идея в том, что перегружать команду правилами не надо, но и анархии не должно быть;
Весь процесс ещё более короткий и быстротекущий, чем в Agil'e, а планирование зачастую происходит на день вперёд;

Итерации разработки называются спринтами. Они, в свою очередь, делятся на дни;


Участники scrum-процесса:
  1. Команда -- 6-8 людей разных специальностей. /*и программист, и дизайнер, и тестировщик, к примеру*/
    Команда -- самоорганизующаяся единица. Команда получает задание, а то, как и кем это будет реализовано, остаётся за командой;
  2. Product Owner (P.O.)
    Занимается постановкой задачи. При заказном проекте -- представитель заказчика, при собственной разработке -- тот, кто знает, как будет развиваться продукт;
  3. Scrum-Master. Руководитель проекта\тимлид, если говорить в терминологии традиционного устройства;
    Занимается, в основном, тем, что проводит совещания и следит за прогрессом, разбираясь с тем, почему задачи не выполняются, если они не выполняются;


Основные понятия:
  1. Project backlog. По сути, журнал наоборот, в котором записано, что должно быть выполнено. Говоря короче -- список задач;
    Это не полноценное ТЗ, а, скорее, функции системы в формате "запрос-отклик." Это возможно из-за Р.О. рядом, которого можно спрашивать;
    Часто меняется в ходе разработки проекта;
  2. Спринт. Одна итерация работы длиной 1-3 недели;
  3. Sprint backlog. Задача на одну итерацию.
    Составляется P.O. при содействии с командой. После этого команда разбивает sprint backlog на подзадачи так, чтобы сложность одной подзадачи была не больше 6 часов;
    К каждой подзадаче пишется "DoD" -- Definition of Done -- критерий готовности. Это работа аналитика -- пишет их тот же, кто и функции системы. Проверяются же они тестровщиками;


Ход работы:
  Ежедневные совещания (standup);
    Обычно проходят с утра, но не прямо в начале рабочего дня. Длятся около 15 минут;
    На них каждый делает короткое сообщение, отвечая на три вопроса:
      1) Что сделано после предыдущего совещания?
      2) Что будет сделано до следующего совещания?
      3) Какие возникают сложности?
    Из плюсов:
      1) Мотивация к действиям;
      2) Коллективное владение проектом. Все примерно знают, что как работает;
    Часто есть доска, разделённая на "В планах", "В процессе" и "Сделано." Это добавляет наглядности процессу выполнения задач;


    Остановка спринта:
    Для этого могут быть две причины и два инициатора:
    1. P. O.
      при изменении требований;
      2. Команда
      при отсутствии возможностей для выполнения задачи;


      Штатное завернешние спринта:
      1. Sprint Review. Подведение итогов;
      Появляется максимум людей. Здесь происходит демонстрация товара;
      2. Ретроспективное совещание;
      Полностью внутреннее совещание. Достаточно критическая оценка того, как прошёл спринт, происходящая через ответ на три вопроса:
        1. Что было сделано в спринте?
        2. Чего не было сделано и почему?
        3. Что нужно улучшить в дальнейшем?

  После этого начаинается следующая итерация разработки;


Плюсы модели:
  1. Скорость;
  2. Внесение управления в анархичность agil'a;

Недостатки:
  1. Заказчика не всегда легко вовлечь.
    У него много задач, поэтому ему будет сложно часто появляться на встречах;
  2. Сложно распараллеливать процессы и проекты.
    Один человек не может работать над более чем одним проектом;
  3. Способ подходит не любому человеку.
    Для многих сложно работать в условиях очень коротких редлайнов и постоянной ответственности. Человек часто устаёт от этого;
    
